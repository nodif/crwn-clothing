{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{useNavigate}from'react-router-dom';import CustomButton from'../custom-button/custom-button.component';import CartItem from'../cart-item/cart-item.component';import{selectCartItems}from'../../redux/cart/cart.selectors';import{toggleCartHidden}from'../../redux/cart/cart.actions';import'./cart-dropdown.styles.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CartDropdown=function CartDropdown(){var cartItems=useSelector(selectCartItems);var dispatch=useDispatch();var navigate=useNavigate();return/*#__PURE__*/_jsxs(\"div\",{className:\"cart-dropdown\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cartItems.length?cartItems.map(function(cartItem){return/*#__PURE__*/_jsx(CartItem,{item:cartItem},cartItem.id);}):/*#__PURE__*/_jsx(\"span\",{className:\"empty-message\",children:\"Your cart is empty\"})}),/*#__PURE__*/_jsx(CustomButton,{onClick:function onClick(){navigate('/checkout');dispatch(toggleCartHidden());},children:\"GO TO CHECKOUT\"})]});};export default CartDropdown;","map":{"version":3,"sources":["C:/Users/Danilo/Desktop/coda/eideadh/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","useSelector","useDispatch","useNavigate","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","dispatch","navigate","length","map","cartItem","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CAEA,MAAO,6BAAP,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEzB,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAACK,eAAD,CAA7B,CACA,GAAMI,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAIS,CAAAA,QAAQ,CAAGR,WAAW,EAA1B,CACA,mBACE,aAAK,SAAS,CAAC,eAAf,wBACE,YAAK,SAAS,CAAC,YAAf,UAEEM,SAAS,CAACG,MAAV,CACEH,SAAS,CAACI,GAAV,CAAc,SAAAC,QAAQ,qBACpB,KAAC,QAAD,EAA4B,IAAI,CAAEA,QAAlC,EAAeA,QAAQ,CAACC,EAAxB,CADoB,EAAtB,CADF,cAKE,aAAM,SAAS,CAAC,eAAhB,gCAPJ,EADF,cAWE,KAAC,YAAD,EAAc,OAAO,CAAE,kBAAM,CAACJ,QAAQ,CAAC,WAAD,CAAR,CAAuBD,QAAQ,CAACH,gBAAgB,EAAjB,CAAR,CAA+B,CAApF,4BAXF,GADF,CAcE,CApBJ,CAwBA,cAAeC,CAAAA,YAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport CartItem from '../cart-item/cart-item.component';\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n\r\nimport './cart-dropdown.styles.scss';\r\n\r\nconst CartDropdown = () => {\r\n\r\n  const cartItems = useSelector(selectCartItems);\r\n  const dispatch = useDispatch();\r\n\r\n  let navigate = useNavigate();\r\n  return(\r\n    <div className='cart-dropdown'>\r\n      <div className='cart-items'>\r\n      {\r\n        cartItems.length ?\r\n          cartItems.map(cartItem => (\r\n            <CartItem key={cartItem.id} item={cartItem}/>\r\n          ))\r\n        : \r\n          <span className='empty-message'>Your cart is empty</span>\r\n      }\r\n      </div>\r\n      <CustomButton onClick={() => {navigate('/checkout'); dispatch(toggleCartHidden()); }}>GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n  )};\r\n\r\n\r\n\r\nexport default CartDropdown;"]},"metadata":{},"sourceType":"module"}