{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { createSelector } from \"reselect\";\nimport ShopActionTypes from \"./shop.types\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam]);\nexport const selectIsCollectionsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/Danilo/Desktop/coda/eideadh/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","ShopActionTypes","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CACrD,CAACK,iBAAD,CADqD,EAErDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAFhC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAC9Cb,cAAc,CACV,CAACK,iBAAD,CADU,EAEVC,WAAW,IAAIA,WAAW,CAACO,kBAAD,CAFhB,CADX;AAMP,OAAO,MAAMC,2BAA2B,GAAGd,cAAc,CACrD,CAACE,UAAD,CADqD,EAErDE,IAAI,IAAIA,IAAI,CAACW,UAFwC,CAAlD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACnD,CAACE,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport { createSelector } from \"reselect\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n)\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n  );\r\n\r\nexport const selectCollection = collectionUrlParam => \r\n    createSelector(\r\n        [selectCollections],\r\n        collections => collections[collectionUrlParam]\r\n    )\r\n\r\nexport const selectIsCollectionsFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n)\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n)"]},"metadata":{},"sourceType":"module"}